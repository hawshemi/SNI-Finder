name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: false

      - name: Run go mod tidy
        run: go mod tidy

      - name: Set environment variables
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            echo "GOOS=linux" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            echo "GOOS=darwin" >> $GITHUB_ENV
          else
            echo "GOOS=windows" >> $GITHUB_ENV
            echo "EXT=.exe" >> $GITHUB_ENV
          fi

      - name: Build binary
        env:
          GOARCH: ${{ matrix.arch }}
          GOOS: ${{ env.GOOS }}
          EXT: ${{ env.EXT }}
        run: |
          go build -o SNI-Finder-${{ env.GOOS }}-${{ matrix.arch }}${{ env.EXT }} .

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: SNI-Finder-${{ env.GOOS }}-${{ matrix.arch }}${{ env.EXT }}
          path: SNI-Finder-${{ env.GOOS }}-${{ matrix.arch }}${{ env.EXT }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          pattern: SNI-Finder-*
          merge-multiple: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: SNI-Finder-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'darwin' || 'windows' }}-${{ matrix.arch }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          asset_name: SNI-Finder-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'darwin' || 'windows' }}-${{ matrix.arch }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          asset_content_type: application/octet-stream
